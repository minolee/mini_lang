true
[EXPR] -> [EXPR6]*
[EXPR8] -> [EXPR9]*
[EXPR] -> *[EXPR6][EXPR6] -> *[EXPR8][BASE_CASE] -> *<NUMBER>[ASSIGN_EXPR] -> <ID><ASSIGN>*[EXPR][EXPR8] -> *[EXPR9][BASE_CASE] -> *<LPARENTHESE>[EXPR]<RPARENTHESE>[EXPR10] -> *[BASE_CASE][EXPR9] -> *[EXPR10][BASE_CASE] -> *<ID>
[COMPOUND_EXPR] -> [CONCURRENT_EXPR]*
[EXPR6] -> [EXPR8]*
[EXPR] -> *[EXPR6][EXPR6] -> *[EXPR8][BASE_CASE] -> *<NUMBER>[BASE_CASE] -> <LPARENTHESE>*[EXPR]<RPARENTHESE>[EXPR8] -> *[EXPR9][BASE_CASE] -> *<LPARENTHESE>[EXPR]<RPARENTHESE>[EXPR10] -> *[BASE_CASE][EXPR9] -> *[EXPR10][BASE_CASE] -> *<ID>
[IF_EXPR] -> <IF><END_IF>*
[IF_EXPR] -> <IF>*<END_IF>
[BASE_CASE] -> <ID>*
[SENTENCE:0] -> [SENTENCE][SENTENCE:0]*
[SEQUENCE_EXPR_:0] -> *[SEQUENCE_EXPR_][SEQUENCE_EXPR_:0][SEQUENCE_EXPR_:0] -> [SEQUENCE_EXPR_]*[SEQUENCE_EXPR_:0][SEQUENCE_EXPR_:0] -> *[SEQUENCE_EXPR_][SEQUENCE_EXPR_] -> *<SEQUENCE>[EXPR][SEQUENCE_EXPR_:0] -> [SEQUENCE_EXPR_]*
[ASSIGN_EXPR] -> <ID><ASSIGN>[EXPR]*
[BASE_CASE] -> <LPARENTHESE>[EXPR]<RPARENTHESE>*
[PROGRAM] -> [SENTENCE:0]<EOF>*
[PROGRAM] -> [SENTENCE:0]*<EOF>
[BASE_CASE] -> <LPARENTHESE>[EXPR]*<RPARENTHESE>
[COMPOUND_EXPR] -> [EXPR]*
[SEQUENCE_EXPR_:0] -> *[SEQUENCE_EXPR_][SEQUENCE_EXPR_:0][SEQUENCE_EXPR_:0] -> *[SEQUENCE_EXPR_][SEQUENCE_EXPR_] -> *<SEQUENCE>[EXPR][SEQUENCE_EXPR] -> [ASSIGN_EXPR]*[SEQUENCE_EXPR] -> [ASSIGN_EXPR]*[SEQUENCE_EXPR_:0][COMPOUND_EXPR] -> [ASSIGN_EXPR]*
[SENTENCE_] -> [COMPOUND_EXPR]*
[ASSIGN_EXPR] -> <ID>*<ASSIGN>[EXPR][BASE_CASE] -> <ID>*
[SENTENCE] -> [SENTENCE_]<END_SENTENCE>*
[SEQUENCE_EXPR_] -> <SEQUENCE>[EXPR]*
[PROGRAM] -> <EOF>*
[LHS_LIST] -> [LHS_LIST]*[CONCURRENT_EXPR] -> [LHS_LIST]*<ASSIGN>[RHS_LIST]
[RHS_LIST] -> *[RHS_LIST][CONCURRENT_EXPR] -> [LHS_LIST]<ASSIGN>*[RHS_LIST]
[SEQUENCE_EXPR_:0] -> [SEQUENCE_EXPR_][SEQUENCE_EXPR_:0]*
[SENTENCE] -> [SENTENCE_]*<END_SENTENCE>
[DO_EXPR] -> <DO>*<END_DO>
[DO_EXPR] -> <DO><END_DO>*
[SENTENCE_] -> [DO_EXPR]*
[RHS_LIST] -> [RHS_LIST]*[CONCURRENT_EXPR] -> [LHS_LIST]<ASSIGN>[RHS_LIST]*
[COMPOUND_EXPR] -> <ABORT>*
[SENTENCE_] -> [IF_EXPR]*
[EXPR] -> *[EXPR6][EXPR6] -> *[EXPR8][BASE_CASE] -> *<NUMBER>[SEQUENCE_EXPR_] -> <SEQUENCE>*[EXPR][EXPR8] -> *[EXPR9][BASE_CASE] -> *<LPARENTHESE>[EXPR]<RPARENTHESE>[EXPR10] -> *[BASE_CASE][EXPR9] -> *[EXPR10][BASE_CASE] -> *<ID>
[SEQUENCE_EXPR] -> [ASSIGN_EXPR][SEQUENCE_EXPR_:0]*
[BASE_CASE] -> <NUMBER>*
[COMPOUND_EXPR] -> <_SKIP>*
[COMPOUND_EXPR] -> [SEQUENCE_EXPR]*
[EXPR9] -> [EXPR10]*
[EXPR10] -> [BASE_CASE]*
[COMPOUND_EXPR] -> *[CONCURRENT_EXPR][LHS_LIST] -> *[LHS_LIST][EXPR] -> *[EXPR6][SENTENCE:0] -> *[SENTENCE][EXPR6] -> *[EXPR8][SENTENCE:0] -> [SENTENCE]*[EXPR8] -> *[EXPR9][SENTENCE:0] -> [SENTENCE]*[SENTENCE:0][IF_EXPR] -> *<IF><END_IF>[BASE_CASE] -> *<ID>[ASSIGN_EXPR] -> *<ID><ASSIGN>[EXPR][BASE_CASE] -> *<LPARENTHESE>[EXPR]<RPARENTHESE>[COMPOUND_EXPR] -> *[EXPR][SENTENCE_] -> *[COMPOUND_EXPR][COMPOUND_EXPR] -> *[ASSIGN_EXPR][SENTENCE] -> *[SENTENCE_]<END_SENTENCE>[SEQUENCE_EXPR] -> *[ASSIGN_EXPR][SENTENCE_] -> *[DO_EXPR][DO_EXPR] -> *<DO><END_DO>[COMPOUND_EXPR] -> *<ABORT>[SENTENCE_] -> *[IF_EXPR][COMPOUND_EXPR] -> *<_SKIP>[BASE_CASE] -> *<NUMBER>[SEQUENCE_EXPR] -> *[ASSIGN_EXPR][SEQUENCE_EXPR_:0][SENTENCE:0] -> *[SENTENCE][SENTENCE:0][EXPR10] -> *[BASE_CASE][COMPOUND_EXPR] -> *[SEQUENCE_EXPR][EXPR9] -> *[EXPR10][CONCURRENT_EXPR] -> *[LHS_LIST]<ASSIGN>[RHS_LIST]
[COMPOUND_EXPR] -> *[CONCURRENT_EXPR][LHS_LIST] -> *[LHS_LIST][EXPR] -> *[EXPR6][SENTENCE:0] -> *[SENTENCE][EXPR6] -> *[EXPR8][EXPR8] -> *[EXPR9][IF_EXPR] -> *<IF><END_IF>[BASE_CASE] -> *<ID>[ASSIGN_EXPR] -> *<ID><ASSIGN>[EXPR][PROGRAM] -> *[SENTENCE:0]<EOF>[BASE_CASE] -> *<LPARENTHESE>[EXPR]<RPARENTHESE>[COMPOUND_EXPR] -> *[EXPR][SENTENCE_] -> *[COMPOUND_EXPR][COMPOUND_EXPR] -> *[ASSIGN_EXPR][SENTENCE] -> *[SENTENCE_]<END_SENTENCE>[PROGRAM] -> *<EOF>[SEQUENCE_EXPR] -> *[ASSIGN_EXPR][SENTENCE_] -> *[DO_EXPR][DO_EXPR] -> *<DO><END_DO>[COMPOUND_EXPR] -> *<ABORT>[SENTENCE_] -> *[IF_EXPR][COMPOUND_EXPR] -> *<_SKIP>[BASE_CASE] -> *<NUMBER>[SEQUENCE_EXPR] -> *[ASSIGN_EXPR][SEQUENCE_EXPR_:0][SENTENCE:0] -> *[SENTENCE][SENTENCE:0][EXPR10] -> *[BASE_CASE][COMPOUND_EXPR] -> *[SEQUENCE_EXPR][EXPR9] -> *[EXPR10][CONCURRENT_EXPR] -> *[LHS_LIST]<ASSIGN>[RHS_LIST]
Exception in thread "main" java.util.EmptyStackException
skip | do od
	at java.base/java.util.Stack.peek(Stack.java:102)
abort | if fi
	at java.base/java.util.Stack.pop(Stack.java:84)
x1, x2, xn := e1, e2, en
	at parser.ParseState.shift(ParseState.java:32)
expr1; expr2
	at parser.ParseState.feed(ParseState.java:19)
if (1 > 2) -> 3 * 4 | b2 -> sl2 | b3 ->2*3 fi
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
do b1 -> sl1 | b2 -> sl2 | b3 ->sl3 od
print(b1)[COMPOUND_EXPR] -> <_SKIP>*
	at parser.Parser.parse(Parser.java:521)
	at Main.main(Main.java:36)
